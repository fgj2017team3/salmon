// Stone.cs 
//
// @idev Unity2017.1.0f3 / MonoDevelop5.9.6
// @auth FCEI.No-Va
// @date 2017/08/19
//
// Copyright (C) 2017 FlyteCatEmotion Inc.
// All Rights Reserved.
//------------------------------------------------------------------------------------------------------------------------
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

//----------------------------------------------------------------------------------------------------
// 石ころの管理  
//----------------------------------------------------------------------------------------------------
public class Stone : MonoBehaviour
{
	//--------------------------------------------------------------------------------
	// メンバ変数  
	//--------------------------------------------------------------------------------
	static List<Stone> stones = new List<Stone>();		// 石リスト 

	Transform _t;			// 高速化 
	Transform transCam;		// カメラ位置 

	[SerializeField]BoxCollider2D collid;				// 当たり判定 


	//--------------------------------------------------------------------------------
	// コンストラクタ 
	//--------------------------------------------------------------------------------
	void Awake ()
	{ 
		stones.Add(this);
		_t = this.gameObject.transform;
	}

	//--------------------------------------------------------------------------------
	// デストラクタ 
	//--------------------------------------------------------------------------------
	void OnDestroy ()
	{
		stones.Remove(this);
	}



	//--------------------------------------------------------------------------------
	// 初期化 
	//--------------------------------------------------------------------------------
	public void Setup (Transform cam, float x, float y, int size)
	{
		// カメラ保持 
		transCam = cam;

		// パラメータを設定 
		_t.localPosition = new Vector3(x, y, 0);


	}



	//--------------------------------------------------------------------------------
	// 指定したポジションが石なのかどうか調べる 
	//--------------------------------------------------------------------------------
	public static bool CheckStones (float x, float y)
	{
		foreach(Stone s in stones){
			if(s.IsStone(x,y)){ return true; }
		}

		return false;
	}



	//--------------------------------------------------------------------------------
	// 指定したポジションが石なのかどうか調べる(個別) 
	//--------------------------------------------------------------------------------
	bool IsStone (float x, float y)
	{
		return collid.OverlapPoint(new Vector2(x,y));
	}



	//--------------------------------------------------------------------------------
	// 指定したポジションの石を飛ばす 
	//--------------------------------------------------------------------------------
	public static void Attack (float x, float y)
	{
		foreach(Stone s in stones){
			if(s.IsStone(x,y)){
				s.Break();
			}
		}
	}



	//--------------------------------------------------------------------------------
	// 石飛び 
	//--------------------------------------------------------------------------------
	void Break()
	{

	}



	//--------------------------------------------------------------------------------
	// 更新 
	//--------------------------------------------------------------------------------
	void Update ()
	{
		// 画面外に出たら消す処理 
		if(transCam.position.y > _t.position.y + 240){
			GameObject.Destroy(this.gameObject);
		}
	}
}
